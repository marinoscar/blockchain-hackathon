{
  "name": "blockchain-hackathon",
  "version": "1.0.0",
  "description": "Express API with Convector Framework.",
  "main": "index.js",
  "author": {
    "name": "oscar.marin"
  },
  "license": "Apache-2.0",
  "scripts": {
    "wait": "sleep 5",
    "user:fingerprint": "f () { node -e \"console.log(JSON.parse(require('fs').readFileSync('./.convector-dev-env/.hfc-$1/$2', 'utf8')).enrollment.identity.certificate)\" | openssl x509 -fingerprint -noout | cut -d '=' -f2 ; }; f",
    "================= Life cycle =================": "==================================",
    "install": "npm-run-all -s lerna:install",
    "init": "npm-run-all -s env:init 'cc:start -- 1'",
    "start": "npm-run-all -s env:start",
    "clean": "npm-run-all -s env:stop env:clean",
    "restart": "npm-run-all -s clean install start init",
    "test": "npm-run-all -s lerna:test",
    "================= Lerna =================": "==================================",
    "lerna:install": "lerna bootstrap",
    "lerna:build": "lerna run build",
    "lerna:stop": "lerna run stop --parallel",
    "lerna:clean": "lerna clean --yes && lerna run clean --parallel",
    "lerna:test": "lerna exec npm run test",
    "lerna:lint": "lerna run lint",
    "================= Dev Env =================": "==================================",
    "env:init": "./node_modules/@worldsibu/convector-tool-dev-env/scripts/init.sh",
    "env:start": "./node_modules/@worldsibu/convector-tool-dev-env/scripts/start.sh",
    "env:stop": "./node_modules/@worldsibu/convector-tool-dev-env/scripts/stop.sh",
    "env:restart": "./node_modules/@worldsibu/convector-tool-dev-env/scripts/restart.sh",
    "env:clean": "./node_modules/@worldsibu/convector-tool-dev-env/scripts/clean.sh",
    "================= Chaincodes =================": "==================================",
    "cc:start": "sh install-chaincodes.sh",
    "cc:package": "chaincode-manager --config ./org1.chaincode.config.json --output ./chaincode package",
    "cc:install": "f() { chaincode-manager --config ./$1.chaincode.config.json install ./chaincode drug $2; }; f",
    "cc:instantiate": "chaincode-manager --config ./org1.chaincode.config.json instantiate drug",
    "cc:upgrade": "chaincode-manager --config ./org1.chaincode.config.json upgrade drug",
    "cc:invoke": "f() { chaincode-manager --config ./$1.chaincode.config.json invoke drug ${@:2}; }; f",
    "cc:upgradeInAll": "f() { npm-run-all -s cc:package \"cc:install -- org1 $1\" \"cc:install -- org2 $1\" \"cc:upgrade -- $1\"; }; f"
  },
  "devDependencies": {
    "lerna": "^2.11.0",
    "npm-run-all": "^4.1.3",
    "@worldsibu/convector-tool-chaincode-manager": "1.2.0",
    "@worldsibu/convector-tool-dev-env": "1.2.0",
    "@types/mocha": "^5.2.5",
    "@types/chai": "^4.1.4",
    "@types/node": "^10.5.2",
    "@types/yup": "^0.24.7",
    "@types/dotenv": "^4.0.3",
    "@types/express": "^4.16.0",
    "@types/bytebuffer": "^5.0.37",
    "fabric-ca-client": "~1.1.2",
    "fabric-client": "~1.1.2"
  },
  "dependencies": {
    "node-couchdb": "^1.3.0"
  }
}
